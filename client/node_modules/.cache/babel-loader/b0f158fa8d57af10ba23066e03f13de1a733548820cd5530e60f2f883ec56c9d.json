{"ast":null,"code":"var _jsxFileName = \"/Users/manojkumars/Documents/graphql_chat/client/src/component/Chat.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Row, Col, Button, Card, Form, Alert, Badge } from 'react-bootstrap';\nimport { gql, useQuery, useMutation } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_MESSAGE = gql`\n    query {\n      messages {\n        id,\n        user,\n        content\n        }\n    }\n`;\nconst POST_MESSAGE = gql`\n    mutation postMessage($user: String!, $content: String!) {\n        postMessage(user: $user, content: $content)\n    }\n`;\nconst Message = _ref => {\n  _s();\n  let {\n    messageUser\n  } = _ref;\n  const {\n    loading,\n    data,\n    error\n  } = useQuery(GET_MESSAGE);\n  if (!data) {\n    return;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data.messages.map(each => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: each.user === messageUser ? \"flex-end\" : \"flex-start\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Badge, {\n          bg: \"secondary\",\n          pill: true,\n          style: {\n            width: \"50px\",\n            height: \"50px\",\n            marginTop: \"5px\",\n            lineHeight: \"35px\",\n            fontSize: \"17px\",\n            marginRight: \"5px\"\n          },\n          children: each.user.slice(0, 2).toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Alert, {\n          variant: each.user === messageUser ? \"secondary\" : \"success\",\n          children: each.content\n        }, each.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this)]\n      }, each.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 10\n  }, this);\n};\n_s(Message, \"4k2moIvLDw2nUBcLPAvnagsOU6g=\", false, function () {\n  return [useQuery];\n});\n_c = Message;\nconst Chat = props => {\n  _s2();\n  const [username, setUsername] = useState(\"\");\n  const [messageContent, setMessageContent] = useState(\"\");\n  const [postMessage, {\n    loading,\n    data,\n    error\n  }] = useMutation(POST_MESSAGE);\n  const triggerSave = e => {\n    postMessage({\n      variables: {\n        user: username,\n        content: messageContent\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        bg: \"light\",\n        style: {\n          width: '18rem'\n        },\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: \"Your Chat Bot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Message, {\n            messageUser: username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: triggerSave,\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              htmlFor: \"inputPassword5\",\n              children: \"Enter Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              id: \"inputPassword5\",\n              \"aria-describedby\": \"passwordHelpBlock\",\n              onChange: e => setUsername(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n              htmlFor: \"inputPassword5\",\n              children: \"Your Message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              id: \"textmessage\",\n              \"aria-describedby\": \"textMessage\",\n              onChange: e => setMessageContent(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              id: \"passwordHelpBlock\",\n              muted: true,\n              children: \"Username is needed to start the chat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"primary\",\n              children: \"Start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s2(Chat, \"oiZTO4PRSDbbU2L58BOu0IIjEkU=\", false, function () {\n  return [useMutation];\n});\n_c2 = Chat;\nexport default Chat;\nvar _c, _c2;\n$RefreshReg$(_c, \"Message\");\n$RefreshReg$(_c2, \"Chat\");","map":{"version":3,"names":["React","useState","Container","Row","Col","Button","Card","Form","Alert","Badge","gql","useQuery","useMutation","GET_MESSAGE","POST_MESSAGE","Message","messageUser","loading","data","error","messages","map","each","display","justifyContent","user","width","height","marginTop","lineHeight","fontSize","marginRight","slice","toUpperCase","content","id","Chat","props","username","setUsername","messageContent","setMessageContent","postMessage","triggerSave","e","variables","target","value"],"sources":["/Users/manojkumars/Documents/graphql_chat/client/src/component/Chat.js"],"sourcesContent":["import React, {useState} from 'react'\nimport {Container, Row, Col, Button, Card , Form, Alert, Badge} from 'react-bootstrap'\nimport { gql, useQuery, useMutation } from '@apollo/client';\n\nconst GET_MESSAGE = gql`\n    query {\n      messages {\n        id,\n        user,\n        content\n        }\n    }\n`\n\nconst POST_MESSAGE = gql`\n    mutation postMessage($user: String!, $content: String!) {\n        postMessage(user: $user, content: $content)\n    }\n`\n\nconst Message = ({messageUser}) => {\n    \n    const {loading, data, error} = useQuery(GET_MESSAGE);\n    if(!data) {\n        return\n    }\n    return (\n         <div>\n            {data.messages.map((each) => {\n                return (\n                    <div key={each.id} style={{display: \"flex\", justifyContent: each.user === messageUser ? \"flex-end\": \"flex-start\" }}>\n                        <Badge bg=\"secondary\" pill={true} style={{width: \"50px\", height: \"50px\", marginTop: \"5px\", lineHeight: \"35px\", fontSize: \"17px\", marginRight: \"5px\"}} >{each.user.slice(0,2).toUpperCase()}</Badge>\n                        <Alert key={each.id} variant={each.user === messageUser ? \"secondary\" : \"success\"}>\n          {each.content}\n        </Alert>\n                        </div>\n                )\n            })}\n            </div>\n    )\n}\n\nconst Chat = (props) => {\n    const [username, setUsername] = useState(\"\");\n    const [messageContent, setMessageContent] = useState(\"\");\n    const [postMessage , {loading, data, error} ] = useMutation(POST_MESSAGE)\n    const triggerSave = (e) => {\n        postMessage({\n            variables: {\n                user: username,\n                content:messageContent\n            }\n        })\n    }\n  return (\n    <div>\n        <Container >\n        <Card bg={\"light\"} style={{ width: '18rem' }} >\n      <Card.Body >\n        <Card.Title>Your Chat Bot</Card.Title>\n                    <Message messageUser={username} />\n        <Form onSubmit={triggerSave}>\n        <Form.Label htmlFor=\"inputPassword5\">Enter Name</Form.Label>\n      <Form.Control\n        type=\"text\"\n        id=\"inputPassword5\"\n        aria-describedby=\"passwordHelpBlock\"\n        onChange={(e) => setUsername(e.target.value)}\n      />\n      <Form.Label htmlFor=\"inputPassword5\">Your Message</Form.Label>\n      <Form.Control\n        type=\"text\"\n        id=\"textmessage\"\n        aria-describedby=\"textMessage\"\n        onChange={(e) => setMessageContent(e.target.value)}\n      />\n      <Form.Text id=\"passwordHelpBlock\" muted>\n        Username is needed to start the chat\n      </Form.Text>\n              <Button type=\"submit\" variant=\"primary\">Start</Button>\n      </Form>\n      </Card.Body>\n    </Card>\n    </Container>\n    </div>\n  )\n}\n\nexport default Chat;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}